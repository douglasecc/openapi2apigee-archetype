#set( $H = '#' )
$H API Proxy ${artifactId}

The generated project expects apigee credentials to be available as environament variables APIGEE_USERNAME and APIGEE_PASSWORD

Property <code>deployment.suffix</code> if not provided is by default <code>-${user.name}</code>, for example say your name is <code>pancho</code> and if your
proxy name is <code>oauth-v1</code> and your basepath is <code>oauth/v1</code> and you do not provide <code>deployment.suffix</code> then
your proxy will be deployed ad <code>oauth-v1-pancho</code> and basepath <code>oauth/v1-pancho</code>


$H$H$H Deploy API Proxy to test environment
```bash
mvn install -P test  -Ddeployment.suffix=
```

#if ($mockserver == "true")
$H$H$H Deploy mock server
To deploy mock server to test environment
```bash
cd mock
mvn install -P test
```
#end

$H$H$H Run integration testing on test environment
To run integration testing we need to activate profile integration-test and run maven to phase integration-test, this separation has been done
to get away the problem of creating an apiproduct when the api proxy does not exists yet, in other words the very first time a api proxy is created and deployed.
```bash
mvn integration-test -Ptest,integration-test -Ddeployment.suffix=
```