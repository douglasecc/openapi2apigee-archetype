<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <Description/>
    <FaultRules>
        <FaultRule name="methodNotAllowedFault">
            <Condition>(#foreach($flow in $flows) (initial.verb != "${flow.verb}") AND #end (initial.verb != "OPTIONS"))</Condition>
            <Step>
                <Name>RF-MethodNotAllowed</Name>
            </Step>
        </FaultRule>
        <FaultRule name="internalServerErrorFault">
            <Condition>message.status.code = 500</Condition>
            <Step>
                <Name>RF-InternalServerError</Name>
            </Step>
        </FaultRule>
        <FaultRule name="unsupportedMediaTypeFault">
            <Condition>initial.contentType !~~ "(application)\/(json.*|([a-z]*\+json.*)|([a-z]*\+xml.*)|xml.*)"</Condition>
            <Step>
                <Name>RF-UnsupportedMediaType</Name>
            </Step>
        </FaultRule>
    </FaultRules>
    <PreFlow name="PreFlow">
        <Request/>
        <Response/>
    </PreFlow>
    <PostFlow name="PostFlow">
        <Request/>
        <Response/>
    </PostFlow>
    <Flows>
    #foreach($flow in $flows)
    <Flow name="${flow.name}">
            <Description>${flow.desc}</Description>
            <Condition>(proxy.pathsuffix MatchesPath "${flow.path.replaceAll("\{.*?\}", "*")}") and (request.verb = "${flow.verb}")</Condition>
            <Request>
                <Step>
                    <Condition>request.header.Accept == null</Condition>
                    <Name>AM-SetAcceptHeader</Name>
                </Step>
                <Step>
                    <Condition>request.header.Accept.values.string !~~ "(.*\*/\*.*)|(text|application)/(xml.*|json.*|([a-z]*+json.*))"</Condition>
                    <Name>RF-NotAcceptable</Name>
                </Step>
                <Step>
                    <Name>JS-InitValidations</Name>
                </Step>
                #if($tsContentType == "XML")
                <Step>
                    <Name>JX-JsonToXml</Name>
                </Step>
                #end
                <Step>
                    <Condition>init.validation.status.code = 400</Condition>
                    <Name>RF-BadRequest</Name>
                </Step>
                #if($tsContentType == "XML")
                <Step>
                    <Name>XT-TransformToRequest</Name>
                </Step>
                <Step>
                    <Name>AM-SetContent</Name>
                </Step>
                #end
            </Request>
            <Response>
                #if($tsContentType == "JSON")
                <Step>
                    <Name>JS-ValidateResponse</Name>
                </Step>
                <Step>
                    <Name>JS-SettingFailResponse</Name>
                    <Condition>(isSuccessResponse = false)</Condition>
                </Step>
                <Step>
                    <Name>JS-SettingResponse</Name>
                    <Condition>(isSuccessResponse = true)</Condition>
                </Step>
                #elseif($tsContentType == "XML")
                <Step>
                    <Name>EV-ExtractFaultString</Name>
                    <Condition>(response.content != null)</Condition>
                </Step>
                <Step>
                    <Name>JS-ValidateResponse</Name>
                </Step>
                <Step>
                    <Name>XT-TransformToFault</Name>
                    <Condition>(isSuccessResponse = false)</Condition>
                </Step>
                <Step>
                    <Name>XT-TransformToResponse</Name>
                </Step>
                <Step>
                    <Name>XJ-SetResponse</Name>
                </Step>
                #end
            </Response>
        </Flow>
    #end
        <Flow name="OPTIONS">
            <Description>Flow para tratar a requisição OPTIONS referente a política de CORS dos browsers.</Description>
            <Request/>
            <Response/>
            <Condition>initial.verb = "OPTIONS"</Condition>
        </Flow>
        <Flow name="UnknownResource">
            <Description>Flow para tratar o erro http 404</Description>
            <Request>
                <Step>
                    <Name>RF-PathNotFound</Name>
                </Step>
            </Request>
            <Response/>
        </Flow>
    </Flows>
    <HTTPProxyConnection>
        <BasePath>${basePath}</BasePath>
        <VirtualHost>secure</VirtualHost>
    </HTTPProxyConnection>
    <RouteRule name="default">
        <Condition>(#foreach($flow in $flows)(initial.verb = "${flow.verb}") AND #end (initial.verb != "OPTIONS"))</Condition>
        <TargetEndpoint>default</TargetEndpoint>
    </RouteRule>
    <RouteRule name="noRouteRule">
        <Condition>(#foreach($flow in $flows)(initial.verb != "${flow.verb}") AND #end (initial.verb = "OPTIONS"))</Condition>
    </RouteRule>
</ProxyEndpoint>